// Generated by CoffeeScript 1.10.0
(function() {
  var retailer_list;

  retailer_list = require('./line_data').retailer_list;

  exports.writeTSV = function(lines) {
    var _, i, j, k, l, len, len1, len2, len3, line, m, maxParts, n, o, partsLengths, r, ref, ref1, retailer;
    r = 'References\tQuantity';
    partsLengths = [];
    for (j = 0, len = lines.length; j < len; j++) {
      line = lines[j];
      partsLengths.push(line.partNumbers.length);
    }
    maxParts = Math.max.apply(null, partsLengths);
    if (maxParts < 1) {
      maxParts = 1;
    }
    for (_ = k = 1, ref = maxParts; 1 <= ref ? k <= ref : k >= ref; _ = 1 <= ref ? ++k : --k) {
      r += '\tPart Number';
    }
    r += '\tDescription';
    for (l = 0, len1 = retailer_list.length; l < len1; l++) {
      retailer = retailer_list[l];
      r += "\t" + retailer;
    }
    r += '\n';
    for (m = 0, len2 = lines.length; m < len2; m++) {
      line = lines[m];
      r += "" + line.reference;
      r += "\t" + line.quantity;
      for (i = n = 1, ref1 = maxParts; 1 <= ref1 ? n <= ref1 : n >= ref1; i = 1 <= ref1 ? ++n : --n) {
        r += '\t';
        if (line.partNumbers[i - 1] != null) {
          r += line.partNumbers[i - 1];
        }
      }
      r += "\t" + line.description;
      for (o = 0, len3 = retailer_list.length; o < len3; o++) {
        retailer = retailer_list[o];
        if (line.retailers[retailer] != null) {
          r += "\t" + line.retailers[retailer];
        } else {
          r += '\t';
        }
      }
      r += '\n';
    }
    return r;
  };

}).call(this);

//# sourceMappingURL=writer.js.map
