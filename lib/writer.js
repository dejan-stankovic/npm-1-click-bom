// Generated by CoffeeScript 1.10.0
(function() {
  var headings, retailer_list;

  retailer_list = require('./line_data').retailer_list;

  headings = [
    {
      reference: 'References'
    }, {
      quantity: 'Qty'
    }, {
      description: 'Description'
    }, {
      partNumbers: 'Part Number'
    }
  ];

  exports.writeTSV = function(lines) {
    var _, i, j, k, l, len, len1, len2, len3, line, m, maxParts, n, o, partsLengths, r, ref, ref1, retailer;
    r = 'References\tQty\tDescription';
    partsLengths = [];
    for (j = 0, len = lines.length; j < len; j++) {
      line = lines[j];
      partsLengths.push(line.partNumbers.length);
    }
    maxParts = Math.max.apply(null, partsLengths);
    if (maxParts >= 1) {
      for (_ = k = 1, ref = maxParts; 1 <= ref ? k <= ref : k >= ref; _ = 1 <= ref ? ++k : --k) {
        r += '\tManufacturer';
        r += '\tMPN';
      }
    }
    for (l = 0, len1 = retailer_list.length; l < len1; l++) {
      retailer = retailer_list[l];
      r += "\t" + retailer;
    }
    r += '\n';
    for (m = 0, len2 = lines.length; m < len2; m++) {
      line = lines[m];
      r += "" + line.reference;
      r += "\t" + line.quantity;
      r += "\t" + line.description;
      if (maxParts >= 1) {
        for (i = n = 0, ref1 = maxParts - 1; 0 <= ref1 ? n <= ref1 : n >= ref1; i = 0 <= ref1 ? ++n : --n) {
          r += '\t';
          if (line.partNumbers[i] != null) {
            r += line.partNumbers[i].manufacturer;
            r += '\t';
            r += line.partNumbers[i].part;
          } else {
            r += '\t';
          }
        }
      }
      for (o = 0, len3 = retailer_list.length; o < len3; o++) {
        retailer = retailer_list[o];
        if (line.retailers[retailer] != null) {
          r += "\t" + line.retailers[retailer];
        } else {
          r += '\t';
        }
      }
      r += '\n';
    }
    return r;
  };

}).call(this);

//# sourceMappingURL=writer.js.map
